name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.x
        cache: true

    - name: Install dependencies
      run: make deps

    - name: Run tests
      run: make test

    - name: Build release binaries
      run: make release

    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_ENV
        echo "" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        body: |
          ## Changes in this Release
          ${{ env.CHANGELOG }}
          
          ## Installation
          
          Download the appropriate binary for your platform and make it executable:
          
          ```bash
          chmod +x certgen-*
          ./certgen --help
          ```
          
          ## Docker
          
          ```bash
          docker pull ${{ secrets.DOCKER_USERNAME }}/certgen:${{ github.ref_name }}
          ```
        files: |
          certgen-*
          checksums.txt
        fail_on_unmatched_files: true
        generate_release_notes: true

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/certgen
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max